---
- name: Echo PATH
  command: echo "$PATH"
  register: default_path

- name: Echo anyenv PATH
  command: echo "$HOME/.anyenv"
  register: anyenv_home

- name: Install anyenv
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
  with_items:
    - repo: "https://github.com/anyenv/anyenv"
      dest: "~/.anyenv"
    - repo: "https://github.com/znz/anyenv-update.git"
      dest: "~/.anyenv/plugins/anyenv-update"
    - repo: "https://github.com/znz/anyenv-git.git"
      dest: "~/.anyenv/plugins/anyenv-git"
    - repo: "https://github.com/anyenv/anyenv-install.git"
      dest: "~/.config/anyenv/anyenv-install"

- name: Update anyenv
  environment:
    ANY_ENV_HOME: "{{ anyenv_home.stdout }}"
    PATH: "{{ anyenv_home.stdout }}/bin:{{ default_path.stdout }}"
  shell: |
    eval "$(anyenv init -)"
    anyenv update
  args:
    executable: /bin/bash

- name: Install envs
  environment:
    ANY_ENV_HOME: "{{ anyenv_home.stdout }}"
    PATH: "{{ anyenv_home.stdout }}/bin:{{ default_path.stdout }}"
  shell: |
    eval "$(anyenv init -)"
    anyenv install --force-init
    anyenv install {{ item.env }}
  args:
    executable: /bin/bash
    creates: ~/.anyenv/envs/{{ item.env }}
  with_items:
    - env: nodenv
    - env: goenv
    - env: pyenv

- name: Install build dependencies
  when: "ansible_os_family == 'Debian'"
  become: yes
  become_method: sudo
  apt:
    update_cache: yes
    cache_valid_time: 3600
    name:
      - build-essential
      - zlib1g-dev
      - libffi-dev
      - libssl-dev
      - libbz2-dev
      - libncursesw5-dev
      - libgdbm-dev
      - liblzma-dev
      - libsqlite3-dev
      - tk-dev
      - uuid-dev
      - libreadline-dev

- name: Install language
  environment:
    ANY_ENV_HOME: "{{ anyenv_home.stdout }}"
    PATH: "{{ anyenv_home.stdout }}/bin:{{ default_path.stdout }}"
  shell: |
    eval "$(anyenv init -)"
    {{ item.env }} install {{ item.version  }}
    {{ item.env }} rehash
    {{ item.env }} global {{ item.version }}
  args:
    executable: /bin/bash
    creates: ~/.anyenv/envs/{{ item.env }}/versions/{{ item.version  }}
  with_items:
    - env: nodenv
      version: '{{ lang.node.version }}'
    - env: goenv
      version: '{{ lang.go.version }}'
    - env: pyenv
      version: '{{ lang.python3.version }}'

- name: install ansible python module
  when: "ansible_os_family == 'Debian'"
  shell: ~/.anyenv/envs/pyenv/shims/pip install ansible
  args:
    executable: /bin/bash
