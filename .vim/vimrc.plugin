if has('vim_starting')
  set rtp+=~/.vim/bundle/neobundle.vim
endif

call neobundle#begin()
NeoBundleFetch 'Shougo/neobundle.vim'


NeoBundle 'Shougo/vimproc.vim', {
\ 'build' : {
\     'windows' : 'tools\\update-dll-mingw',
\     'cygwin' : 'make -f make_cygwin.mak',
\     'mac' : 'make',
\     'linux' : 'make',
\     'unix' : 'gmake',
\    },
\ }
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/unite-outline'
NeoBundle 'Shougo/neomru.vim'
NeoBundle 'Shougo/neocomplete.vim'
NeoBundle 'scrooloose/syntastic', {'autoload': {'filetypes': ['ruby', 'go']}}
NeoBundle 'Yggdroot/indentLine'
NeoBundle 'tyru/caw.vim'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'itchyny/lightline.vim'


"---------------------------------------
"ruby
"---------------------------------------
"autocomplete
NeoBundle 'marcus/rsense', {'autoload': {'filetypes': ['ruby']}}
NeoBundle 'supermomonga/neocomplete-rsense.vim', {'autoload': {'filetypes': ['ruby']}}

"auto close
NeoBundle 'tpope/vim-endwise', {'autoload': {'filetypes': ['ruby']}}

"document
NeoBundle 'thinca/vim-ref', {'autoload': {'filetypes': ['ruby']}}
NeoBundle 'yuku-t/vim-ref-ri', {'autoload': {'filetypes': ['ruby']}}


"---------------------------------------
"python
"---------------------------------------
NeoBundle 'davidhalter/jedi-vim', {'autoload': {'filetypes': ['python']}}
NeoBundle 'nvie/vim-flake8', {'autoload': {'filetypes': ['python']}}


"---------------------------------------
"Golang
"---------------------------------------
NeoBundle 'fatih/vim-go'


"---------------------------------------
"unite
"---------------------------------------
nnoremap [unite]    <Nop>
nmap     <Space>u [unite]
nnoremap <silent> [unite]f   :<C-u>Unite file<CR>
nnoremap <silent> [unite]m   :<C-u>Unite file_mru<CR>
nnoremap <silent> [unite]b   :<C-u>Unite buffer<CR>
nnoremap <silent> [unite]r   :<C-u>Unite -buffer-name=register register<CR>
nnoremap <silent> [unite]k   :<C-u>Unite bookmark<CR>
nnoremap <silent> [unite]o   :<C-u>Unite outline<CR>

"---------------------------------------
"indentLine
"---------------------------------------
let g:indentLine_color_term = 239
let g:indentLine_char = 'Â¦'

"---------------------------------------
"caw.vim
"---------------------------------------
nmap <C-K> <Plug>(caw:i:toggle)
vmap <C-K> <Plug>(caw:i:toggle)

"---------------------------------------
"lightline
"---------------------------------------
if filereadable(expand("~/.vim/vimrc.lightline"))
  source ~/.vim/vimrc.lightline
endif


"----------------------------------------
"rsense
"$ brew install rsense
"----------------------------------------
let s:hooks = neobundle#get_hooks("rsense")
function! s:hooks.on_source(bundle)
  let g:rsenseUseOmniFunc = 1
endfunction

"----------------------------------------
"neocomplete.vim
"$ brew install lua
"# brew install vim --override-system-vi --with-lua --with-python3
"----------------------------------------
let s:hooks = neobundle#get_hooks("neocomplete.vim")
function! s:hooks.on_source(bundle)
  let g:neocomplete#sources#rsense#home_directory = '/usr/local/bin/rsense'
  let g:acp_enableAtStartup = 0
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_smart_case = 1
  if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
  endif
  let g:neocomplete#force_omni_input_patterns.ruby = '[^.*\t]\.\w*\|\h\w*::'
  let g:neocomplete#force_omni_input_patterns.python = '\h\w*\|[^. \t]\.\w*'
  let g:neocomplete#force_omni_input_patterns.go = '\h\w\.\w*'
  inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

  autocmd FileType python setlocal completeopt-=previe
  autocmd FileType go setlocal completeopt-=preview
endfunction

"----------------------------------------
"syntastic
"rubocop, golint
"$ sudo gem install -n /usr/local/bin rubocop
"----------------------------------------
let s:hooks = neobundle#get_hooks("syntastic")
function! s:hooks.on_source(bundle)
  " let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['ruby', 'go'] }
  let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['go'] }
  let g:syntastic_ruby_checkers = ['rubocop']

  let g:syntastic_go_checkers = ['golint', 'govet', 'errcheck']
endfunction

"----------------------------------------
"vim-ref
"$ sudo gem install -n /usr/local/bin refe2
"$ bitclust setup
"----------------------------------------

"----------------------------------------
"jedi-vim
"----------------------------------------
let s:hooks = neobundle#get_hooks("jedi-vim")
function! s:hooks.on_source(bundle)
  "let g:jedi#completions_enabled = 0
  let g:jedi#auto_vim_configuration = 0

  if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
  endif 
  let g:neocomplete#force_omni_input_patterns.python = '\h\w*\|[^. \t]\.\w*'
endfunction

"----------------------------------------
"vim-flake8
"$ pip install flake8
"----------------------------------------

"----------------------------------------
"vim-go
":GoInstallBinaries
"----------------------------------------
let s:hooks = neobundle#get_hooks("vim-go")
function! s:hooks.on_source(bundle)
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_structs = 1
endfunction


call neobundle#end()
filetype plugin indent on

if !has('vim_starting')
  call neobundle#call_hook('on_source')
endif


autocmd BufWritePost *.py call Flake8()
autocmd FileType python setlocal completeopt-=preview
